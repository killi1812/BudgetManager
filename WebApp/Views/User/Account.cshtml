@model WebApp.ViewModels.UserVM
@{
    ViewData["Title"] = "Your Account";
}

<div class="container mt-4">
    <h1>Your Account</h1>
    <div class="row">
        <div class="col-md-4">
            <img src="@Model.ProfilePictureUrl" alt="Profile Picture" class="img-thumbnail" style="width: 150px; height: 150px;" />
            <form asp-action="UpdateProfilePicture" asp-controller="User" enctype="multipart/form-data" method="post" class="mt-3">
                <div class="mb-3">
                    <label for="profilePicture" class="form-label">Change Profile Picture</label>
                    <input type="file" class="form-control" name="profilePicture" id="profilePicture" />
                </div>
                <button type="submit" class="btn btn-primary">Upload</button>
            </form>
        </div>
        <div class="col-md-8">
            <h2>Profile Details</h2>
            <form asp-action="EditUser" asp-controller="User" method="post">
                <div class="mb-3">
                    <label asp-for="Username" class="form-label">Username</label>
                    <input asp-for="Username" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Admin Status</label>
                    <input asp-for="Admin" class="form-control" readonly />
                </div>
                <button type="submit" class="btn btn-success">Save Changes</button>
            </form>
        </div>
    </div>
    <hr />
    <h2>Your Downloads</h2>
    <ul class="list-group">
        @if (Model.Downloads.Count > 0)
        {
            foreach (var download in Model.Downloads)
            {
                <li class="list-group-item">@download</li>
            }
        }
        else
        {
            <li class="list-group-item">No downloads available.</li>
        }
    </ul>
</div>

@section Scripts {
    <script>
        const accountForm = document.querySelector("form[asp-action='EditUser']");
        accountForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const username = accountForm.querySelector("input[name='Username']").value;
            const userDto = {
                Guid: "@Model.Guid",
                Username: username,
                Admin: @Model.Admin.ToString().ToLowerInvariant()
                    };
            fetch('/User/EditUser', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(userDto)
            })
                .then(response => response.json())
                .then(data => {
                    alert('Profile updated successfully');
                })
                .catch(error => {
                    alert('An error occurred while updating your profile.');
                });
        });
    </script>
}
